'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

var id = 0;

function _classPrivateFieldLooseKey(name) {
  return "__private_" + id++ + "_" + name;
}

function _classPrivateFieldLooseBase(receiver, privateKey) {
  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
    throw new TypeError("attempted to use private field on non-instance");
  }

  return receiver;
}

var _Symbol$toStringTag;

var _data = /*#__PURE__*/_classPrivateFieldLooseKey("data");

_Symbol$toStringTag = Symbol.toStringTag;
var LocalMemoryStorage = /*#__PURE__*/function (_Symbol$toStringTag2) {
  function LocalMemoryStorage() {
    var _this = this;

    Object.defineProperty(this, _data, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldLooseBase(this, _data)[_data] = new Map();
    return new Proxy(this, {
      // reveal keys in Reflect.ownKeys()
      ownKeys: function ownKeys() {
        return Array.from(_classPrivateFieldLooseBase(_this, _data)[_data].keys());
      },
      // reveal keys in Object.keys()
      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {
        var hasKey = _classPrivateFieldLooseBase(target, _data)[_data].has(prop);

        var value = hasKey ? target.getItem(prop) : undefined;
        return {
          value: value,
          writable: false,
          enumerable: hasKey,
          configurable: true
        };
      },
      // bind methods to target, otherwise calls that access private class fields
      // will have the proxy as their context and calls will fail with:
      // "Cannot read private member from an object whose class did not declare it"
      get: function get(target, name) {
        var ret = Reflect.get(target, name);

        if (typeof ret === 'function') {
          return ret.bind(target);
        } // otherwise retrieve the value of the corresponding key (e.g. for Object.values)


        return _this.getItem(name);
      },
      set: function set(target, name, value) {
        return Reflect.set(target, name, value);
      }
    });
  }

  var _proto = LocalMemoryStorage.prototype;

  _proto.key = function key(index) {
    if (arguments.length === 0) {
      throw new TypeError('MemoryWebStorage requires 1 argument, received 0.');
    }

    return Array.from(_classPrivateFieldLooseBase(this, _data)[_data].keys())[index];
  };

  _proto.getItem = function getItem(key) {
    return _classPrivateFieldLooseBase(this, _data)[_data].has(key) ? _classPrivateFieldLooseBase(this, _data)[_data].get(key) : null;
  };

  _proto.setItem = function setItem(key, value) {
    _classPrivateFieldLooseBase(this, _data)[_data].set(String(key), String(value));
  };

  _proto.removeItem = function removeItem(key) {
    _classPrivateFieldLooseBase(this, _data)[_data]["delete"](key);
  };

  _proto.clear = function clear() {
    _classPrivateFieldLooseBase(this, _data)[_data].clear();
  };

  _createClass(LocalMemoryStorage, [{
    key: "length",
    get: function get() {
      return _classPrivateFieldLooseBase(this, _data)[_data].size;
    }
  }, {
    key: _Symbol$toStringTag2,
    get: function get() {
      return 'LocalMemoryStorage';
    }
  }]);

  return LocalMemoryStorage;
}(_Symbol$toStringTag);
var memoryStorage = /*#__PURE__*/new LocalMemoryStorage();

exports.LocalMemoryStorage = LocalMemoryStorage;
exports.default = LocalMemoryStorage;
exports.memoryStorage = memoryStorage;
//# sourceMappingURL=local-memory-storage.cjs.development.js.map
