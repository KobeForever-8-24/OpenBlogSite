{"version":3,"file":"local-memory-storage.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["export class LocalMemoryStorage implements Storage {\n  #data = new Map();\n\n  constructor() {\n    return new Proxy(this, {\n      // reveal keys in Reflect.ownKeys()\n      ownKeys: () => {\n        return Array.from(this.#data.keys());\n      },\n\n      // reveal keys in Object.keys()\n      getOwnPropertyDescriptor: (target, prop) => {\n        const hasKey = target.#data.has(prop);\n        const value = hasKey ? target.getItem(prop) : undefined;\n        return {\n          value,\n          writable: false,\n          enumerable: hasKey,\n          configurable: true,\n        };\n      },\n\n      // bind methods to target, otherwise calls that access private class fields\n      // will have the proxy as their context and calls will fail with:\n      // \"Cannot read private member from an object whose class did not declare it\"\n      get: (target, name) => {\n        let ret = Reflect.get(target, name);\n        if (typeof ret === 'function') {\n          return ret.bind(target);\n        }\n        // otherwise retrieve the value of the corresponding key (e.g. for Object.values)\n        return this.getItem(name);\n      },\n      set: (target, name, value) => {\n        return Reflect.set(target, name, value);\n      },\n    });\n  }\n\n  get length(): number {\n    return this.#data.size;\n  }\n\n  key(index: number): string | null {\n    if (arguments.length === 0) {\n      throw new TypeError('MemoryWebStorage requires 1 argument, received 0.');\n    }\n    return Array.from(this.#data.keys())[index];\n  }\n\n  getItem(key: unknown): string | null {\n    return this.#data.has(key) ? this.#data.get(key) : null;\n  }\n\n  setItem(key: string, value: string): void {\n    this.#data.set(String(key), String(value));\n  }\n\n  removeItem(key: string): void {\n    this.#data.delete(key);\n  }\n\n  clear() {\n    this.#data.clear();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LocalMemoryStorage';\n  }\n}\n\n// Required to avoid typescript erroring when accessing value by index\nexport interface LocalMemoryStorage extends Storage {\n  // Element implicitly has an 'any' type because expression of type '\"a\"' can't be used to index type 'LocalMemoryStorage'.\n}\n\nexport const memoryStorage = new LocalMemoryStorage();\nexport default LocalMemoryStorage;\n"],"names":["LocalMemoryStorage","Map","Proxy","this","ownKeys","Array","from","_classPrivateFieldLooseBase","_this","keys","getOwnPropertyDescriptor","target","prop","hasKey","has","value","getItem","undefined","writable","enumerable","configurable","get","name","ret","Reflect","bind","set","key","index","arguments","length","TypeError","setItem","String","removeItem","clear","size","Symbol","toStringTag","memoryStorage"],"mappings":"oRAAaA,mHACH,IAAIC,IAGH,IAAIC,MAAMC,KAAM,CAErBC,QAAS,kBACAC,MAAMC,KAAKC,EAAAC,QAAWC,SAI/BC,yBAA0B,SAACC,EAAQC,OAC3BC,EAASN,EAAAI,QAAaG,IAAIF,SAEzB,CACLG,MAFYF,EAASF,EAAOK,QAAQJ,QAAQK,EAG5CC,UAAU,EACVC,WAAYN,EACZO,cAAc,IAOlBC,IAAK,SAACV,EAAQW,OACRC,EAAMC,QAAQH,IAAIV,EAAQW,SACX,mBAARC,EACFA,EAAIE,KAAKd,GAGXH,EAAKQ,QAAQM,IAEtBI,IAAK,SAACf,EAAQW,EAAMP,UACXS,QAAQE,IAAIf,EAAQW,EAAMP,qCASvCY,IAAA,SAAIC,MACuB,IAArBC,UAAUC,aACN,IAAIC,UAAU,4DAEf1B,MAAMC,KAAKC,aAAWE,QAAQmB,MAGvCZ,QAAA,SAAQW,UACCpB,aAAWO,IAAIa,GAAOpB,aAAWc,IAAIM,GAAO,QAGrDK,QAAA,SAAQL,EAAaZ,gBACRW,IAAIO,OAAON,GAAMM,OAAOlB,OAGrCmB,WAAA,SAAWP,uBACSA,MAGpBQ,MAAA,wBACaA,mCAxBb,kBACS5B,aAAW6B,kBA0BpB,iBACS,oQADJC,OAAOC,aAUDC,EAAgB,IAAIvC"}